{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HyungGeun\\\\Documents\\\\omok-front\\\\src\\\\Row.js\";\nimport topLeftCorner from './images/topLeftCorner.png';\nimport topRightCorner from './images/topRightCorner.png';\nimport bottomLeftCorner from './images/bottomLeftCorner.png';\nimport bottomRightCorner from './images/bottomRightCorner.png';\nimport upLine from './images/upLine.png';\nimport downLine from './images/downLine.png';\nimport leftLine from './images/leftLine.png';\nimport rightLine from './images/rightLine.png';\nimport crossLine from './images/crossLine.png';\nimport Square from './Square.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(props) {\n  let leftmost;\n  let middle;\n  let rightmost;\n  if (props.rowNumber === 0) {\n    leftmost = topLeftCorner;\n    middle = upLine;\n    rightmost = topRightCorner;\n  } else if (props.rowNumber === 18) {\n    leftmost = bottomLeftCorner;\n    middle = downLine;\n    rightmost = bottomRightCorner;\n  } else {\n    leftmost = leftLine;\n    middle = crossLine;\n    rightmost = rightLine;\n  }\n  const row = [];\n  row.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: leftmost,\n    position: 0,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 14\n  }, this));\n  for (let i = 1; i <= 17; i++) row.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: middle,\n    position: i,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 18\n  }, this));\n  row.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: rightmost,\n    position: 18,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["topLeftCorner","topRightCorner","bottomLeftCorner","bottomRightCorner","upLine","downLine","leftLine","rightLine","crossLine","Square","jsxDEV","_jsxDEV","Row","props","leftmost","middle","rightmost","rowNumber","row","push","line","position","fileName","_jsxFileName","lineNumber","columnNumber","i","children","_c","$RefreshReg$"],"sources":["C:/Users/HyungGeun/Documents/omok-front/src/Row.js"],"sourcesContent":["import topLeftCorner from './images/topLeftCorner.png';\r\nimport topRightCorner from './images/topRightCorner.png';\r\nimport bottomLeftCorner from './images/bottomLeftCorner.png';\r\nimport bottomRightCorner from './images/bottomRightCorner.png';\r\nimport upLine from './images/upLine.png';\r\nimport downLine from './images/downLine.png';\r\nimport leftLine from './images/leftLine.png';\r\nimport rightLine from './images/rightLine.png';\r\nimport crossLine from './images/crossLine.png';\r\nimport Square from './Square.js';\r\n\r\nexport default function Row(props) {\r\n\r\n    let leftmost;\r\n    let middle;\r\n    let rightmost;\r\n\r\n    if (props.rowNumber === 0) {\r\n        leftmost = topLeftCorner;\r\n        middle = upLine;\r\n        rightmost = topRightCorner;\r\n    } else if (props.rowNumber === 18) {\r\n        leftmost = bottomLeftCorner;\r\n        middle = downLine;\r\n        rightmost = bottomRightCorner;\r\n    } else {\r\n        leftmost = leftLine;\r\n        middle = crossLine;\r\n        rightmost = rightLine;\r\n    }\r\n\r\n    const row = [];\r\n    row.push(<Square line={leftmost} position={0} {...props} />);\r\n    for (let i = 1; i <= 17; i++)\r\n        row.push(<Square line={middle} position={i} {...props} />);\r\n    row.push(<Square line={rightmost} position={18} {...props} />);\r\n\r\n    return (\r\n        <div>\r\n            {row}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAE/B,IAAIC,QAAQ;EACZ,IAAIC,MAAM;EACV,IAAIC,SAAS;EAEb,IAAIH,KAAK,CAACI,SAAS,KAAK,CAAC,EAAE;IACvBH,QAAQ,GAAGd,aAAa;IACxBe,MAAM,GAAGX,MAAM;IACfY,SAAS,GAAGf,cAAc;EAC9B,CAAC,MAAM,IAAIY,KAAK,CAACI,SAAS,KAAK,EAAE,EAAE;IAC/BH,QAAQ,GAAGZ,gBAAgB;IAC3Ba,MAAM,GAAGV,QAAQ;IACjBW,SAAS,GAAGb,iBAAiB;EACjC,CAAC,MAAM;IACHW,QAAQ,GAAGR,QAAQ;IACnBS,MAAM,GAAGP,SAAS;IAClBQ,SAAS,GAAGT,SAAS;EACzB;EAEA,MAAMW,GAAG,GAAG,EAAE;EACdA,GAAG,CAACC,IAAI,eAACR,OAAA,CAACF,MAAM;IAACW,IAAI,EAAEN,QAAS;IAACO,QAAQ,EAAE,CAAE;IAAA,GAAKR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC;EAC5D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EACxBR,GAAG,CAACC,IAAI,eAACR,OAAA,CAACF,MAAM;IAACW,IAAI,EAAEL,MAAO;IAACM,QAAQ,EAAEK,CAAE;IAAA,GAAKb;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC;EAC9DP,GAAG,CAACC,IAAI,eAACR,OAAA,CAACF,MAAM;IAACW,IAAI,EAAEJ,SAAU;IAACK,QAAQ,EAAE,EAAG;IAAA,GAAKR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC;EAE9D,oBACId,OAAA;IAAAgB,QAAA,EACKT;EAAG;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEd;AAACG,EAAA,GA/BuBhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}