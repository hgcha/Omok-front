{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HyungGeun\\\\Documents\\\\omok-front\\\\src\\\\Board.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport topLeftCorner from './images/topLeftCorner.png';\nimport topRightCorner from './images/topRightCorner.png';\nimport bottomLeftCorner from './images/bottomLeftCorner.png';\nimport bottomRightCorner from './images/bottomRightCorner.png';\nimport upLine from './images/upLine.png';\nimport downLine from './images/downLine.png';\nimport leftLine from './images/leftLine.png';\nimport rightLine from './images/rightLine.png';\nimport crossLine from './images/crossLine.png';\nimport whiteStone from './images/whiteStone.png';\nimport blackStone from './images/blackStone.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\n  const [isBlackTurn, setIsBlackTurn] = useState(true);\n  const firstRow = [];\n  firstRow.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: topLeftCorner,\n    stone: board[0][0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 19\n  }, this));\n  for (let i = 1; i <= 17; i++) firstRow.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: upLine,\n    stone: board[0][i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this));\n  firstRow.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: topRightCorner,\n    stone: board[0][18]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 19\n  }, this));\n  const middleRows = [];\n  for (let i = 1; i <= 17; i++) {\n    const middleRow = [];\n    middleRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      line: leftLine,\n      stone: board[i][0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this));\n    for (let j = 1; j <= 17; i++) middleRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      line: crossLine,\n      stone: board[i][j]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }, this));\n    middleRow.push( /*#__PURE__*/_jsxDEV(Square, {\n      line: rightLine,\n      stone: board[i][18]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this));\n    middleRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: middleRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this));\n  }\n  const lastRow = [];\n  lastRow.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: bottomLeftCorner,\n    stone: board[18][0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 18\n  }, this));\n  for (let i = 1; i <= 17; i++) lastRow.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: downLine,\n    stone: board[18][i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 22\n  }, this));\n  lastRow.push( /*#__PURE__*/_jsxDEV(Square, {\n    line: bottomRightCorner,\n    stone: board[18][18]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 18\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: firstRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), middleRows, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lastRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"Edavp8/DpAFcnrVUGKsSq4SF/zk=\");\n_c = Board;\nfunction Square(_ref) {\n  let {\n    line\n  } = _ref;\n  let content = null;\n  if (stone === 'white') {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: whiteStone,\n      width: \"25px\",\n      height: \"25px\",\n      style: {\n        position: 'relative',\n        top: '-28px',\n        left: '1px',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this);\n  } else if (stone === 'black') {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blackStone,\n      width: \"25px\",\n      height: \"25px\",\n      style: {\n        position: 'relative',\n        top: '-28px',\n        left: '1px',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: () => {\n      if (!stone) {\n        setStone('white');\n        setTurn();\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: line,\n      width: \"25px\",\n      height: \"25px\",\n      style: {\n        position: 'relative',\n        top: '0px',\n        left: '0px',\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Square;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["useState","topLeftCorner","topRightCorner","bottomLeftCorner","bottomRightCorner","upLine","downLine","leftLine","rightLine","crossLine","whiteStone","blackStone","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","board","setBoard","Array","fill","isBlackTurn","setIsBlackTurn","firstRow","push","Square","line","stone","fileName","_jsxFileName","lineNumber","columnNumber","i","middleRows","middleRow","j","children","lastRow","_c","_ref","content","src","width","height","style","position","top","left","zIndex","className","onClick","setStone","setTurn","_c2","$RefreshReg$"],"sources":["C:/Users/HyungGeun/Documents/omok-front/src/Board.js"],"sourcesContent":["import { useState } from 'react';\r\nimport topLeftCorner from './images/topLeftCorner.png';\r\nimport topRightCorner from './images/topRightCorner.png';\r\nimport bottomLeftCorner from './images/bottomLeftCorner.png';\r\nimport bottomRightCorner from './images/bottomRightCorner.png';\r\nimport upLine from './images/upLine.png';\r\nimport downLine from './images/downLine.png';\r\nimport leftLine from './images/leftLine.png';\r\nimport rightLine from './images/rightLine.png';\r\nimport crossLine from './images/crossLine.png';\r\nimport whiteStone from './images/whiteStone.png';\r\nimport blackStone from './images/blackStone.png';\r\nimport './App.css';\r\n\r\nexport default function Board() {\r\n    \r\n    const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\r\n    const [isBlackTurn, setIsBlackTurn] = useState(true);\r\n\r\n    const firstRow = [];\r\n    firstRow.push(<Square line={topLeftCorner} stone={board[0][0]}/>);\r\n    for(let i = 1; i <= 17; i++)\r\n        firstRow.push(<Square line={upLine} stone={board[0][i]}/>);\r\n    firstRow.push(<Square line={topRightCorner} stone={board[0][18]}/>);\r\n\r\n    const middleRows = [];\r\n    for(let i = 1; i <= 17; i++) {\r\n        const middleRow = [];\r\n        middleRow.push(<Square line={leftLine} stone={board[i][0]}/>);\r\n        for(let j = 1; j <= 17; i++)\r\n            middleRow.push(<Square line={crossLine} stone={board[i][j]}/>);\r\n        middleRow.push(<Square line={rightLine} stone={board[i][18]}/>);\r\n\r\n        middleRows.push(<div>{middleRow}</div>);    \r\n    }\r\n\r\n    const lastRow = [];\r\n    lastRow.push(<Square line={bottomLeftCorner} stone={board[18][0]}/>);\r\n    for(let i = 1; i <= 17; i++)\r\n        lastRow.push(<Square line={downLine} stone={board[18][i]}/>);\r\n    lastRow.push(<Square line={bottomRightCorner} stone={board[18][18]}/>);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {firstRow}            \r\n            </div>\r\n            {middleRows}\r\n            <div>\r\n                {lastRow}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Square({ line }) {\r\n\r\n    let content = null;\r\n    if(stone === 'white') {\r\n        content = <img src={whiteStone} width='25px' height='25px' style={{position: 'relative', top: '-28px', left: '1px', zIndex: 1}}/>;\r\n    } else if(stone === 'black') {\r\n        content = <img src={blackStone} width='25px' height='25px' style={{position: 'relative', top: '-28px', left: '1px', zIndex: 1}}/>;\r\n    }\r\n    return (\r\n        <div className='square' onClick={() => {\r\n            if(!stone) {\r\n                setStone('white');\r\n                setTurn()\r\n            }\r\n        }}>\r\n            <img src={line} width='25px' height='25px' style={{position: 'relative', top: '0px', left: '0px', zIndex: 0}}/>\r\n            {content}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}