{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HyungGeun\\\\Documents\\\\omok-front\\\\src\\\\Square.js\";\nimport whiteStone from './images/whiteStone.png';\nimport blackStone from './images/blackStone.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(_ref) {\n  let {\n    line,\n    rowNumber,\n    position,\n    board,\n    setBoard,\n    turn,\n    setTurn,\n    color,\n    winner,\n    setBeforeMove\n  } = _ref;\n  function handleClick() {\n    if (board[rowNumber][position]) return;\n    const nextBoard = board.map(row => {\n      return row.slice();\n    });\n    nextBoard[rowNumber][position] = color;\n    const StonePositionMessage = {\n      type: 'GET_OPPONENT_POSITION',\n      color: color,\n      row: rowNumber,\n      col: position\n    };\n    connection.send(JSON.stringify(StonePositionMessage));\n    setTurn(turn === 'white' ? 'black' : 'white');\n    setBeforeMove({\n      row: rowNumber,\n      col: position\n    });\n    setBoard(nextBoard);\n  }\n  let stone = null;\n  if (board[rowNumber][position] === 'white') {\n    stone = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: whiteStone,\n      width: \"25px\",\n      height: \"25px\",\n      alt: \"whiteStone\",\n      style: {\n        position: 'relative',\n        top: '-28px',\n        left: '1px',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this);\n  } else if (board[rowNumber][position] === 'black') {\n    stone = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blackStone,\n      width: \"25px\",\n      height: \"25px\",\n      alt: \"blackStone\",\n      style: {\n        position: 'relative',\n        top: '-28px',\n        left: '1px',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this);\n  } else {\n    stone = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: () => {\n      if (!winner && turn === color) handleClick();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: line,\n      width: \"25px\",\n      height: \"25px\",\n      alt: \"pattern\",\n      style: {\n        position: 'relative',\n        top: '0px',\n        left: '0px',\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), stone]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["whiteStone","blackStone","jsxDEV","_jsxDEV","Square","_ref","line","rowNumber","position","board","setBoard","turn","setTurn","color","winner","setBeforeMove","handleClick","nextBoard","map","row","slice","StonePositionMessage","type","col","connection","send","JSON","stringify","stone","src","width","height","alt","style","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","children","_c","$RefreshReg$"],"sources":["C:/Users/HyungGeun/Documents/omok-front/src/Square.js"],"sourcesContent":["import whiteStone from './images/whiteStone.png';\r\nimport blackStone from './images/blackStone.png';\r\n\r\nfunction Square({ line, rowNumber, position, board, setBoard, turn, setTurn, color, winner, setBeforeMove }) {\r\n\r\n    function handleClick() {\r\n        if (board[rowNumber][position])\r\n            return;\r\n\r\n        const nextBoard = board.map(row => {\r\n            return row.slice()\r\n        });\r\n\r\n        nextBoard[rowNumber][position] = color;\r\n        \r\n        const StonePositionMessage = {\r\n            type: 'GET_OPPONENT_POSITION',\r\n            color: color,\r\n            row: rowNumber,\r\n            col: position\r\n        };\r\n\r\n        connection.send(JSON.stringify(StonePositionMessage));\r\n        setTurn(turn === 'white' ? 'black' : 'white');\r\n        setBeforeMove({row: rowNumber, col: position});\r\n        setBoard(nextBoard);\r\n    }\r\n\r\n    let stone = null;\r\n    if (board[rowNumber][position] === 'white') {\r\n        stone = <img src={whiteStone} width='25px' height='25px' alt='whiteStone' style={{ position: 'relative', top: '-28px', left: '1px', zIndex: 1 }} />;\r\n    } else if (board[rowNumber][position] === 'black') {\r\n        stone = <img src={blackStone} width='25px' height='25px' alt='blackStone' style={{ position: 'relative', top: '-28px', left: '1px', zIndex: 1 }} />;\r\n    } else {\r\n        stone = null;\r\n    }\r\n\r\n    return (\r\n        <div className='square' onClick={() => {\r\n            if(!winner && turn === color)\r\n                handleClick();\r\n        }}>\r\n            <img src={line} width='25px' height='25px' alt='pattern' style={{ position: 'relative', top: '0px', left: '0px', zIndex: 0 }} />\r\n            {stone}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}